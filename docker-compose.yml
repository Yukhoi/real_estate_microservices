version: '3.8'

services:
  auth_service:
    build:
      context: ./auth_service
    container_name: auth_service
    ports:
      - "5002:5002"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-secret-key
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - redis
      - rabbitmq
    restart: always

  user_service:
    build:
      context: ./user_service
    container_name: user_service
    ports:
      - "5001:5001"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/user_db
    depends_on:
      - rabbitmq
      - postgres
    restart: always

  property_service:
    build:
      context: ./property_service
    container_name: property_service
    ports:
      - "5003:5003"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/property_db
    depends_on:
      - postgres
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d/ 

volumes:
  redis_data:
  postgres_data: